# Mobile Application Pentesting Process

Recon > Static Analysis > Dinamic Analysis > Reporting

# Recon:

# Fing information about the company
- Earnings Reports and press releases often contain info about mobile apps
# Find the target app on the Play Store or Apple Store
- Read reviews
- Enumerate who created the app
- Enumerate the different app versions and patch notes
- Enumerate the company's other apps

# Static Analysis

# Reading the application code via manual or automated tools to assess the security
- Looking for hardcoded strings, security misconfiguration, or additional targets extracted from the app

# Static analysis will sometimes results in the pentesting process being triggered, especially additional enumeration or fingerprinting
# Find a URL - Recon, enumerate, exploit etc.
- Many companies use other API gateways/path for mobile apps vs the traditional website
# Find an email/username - recon using phonebook.cz, etc.
# Find a storage bucket - recon, enumerate with cloud_enum

# Dynamic Analysis

# Running the application and manipulating it
- Intercepting traffic with proxies like burp suite/Proxyman
- Dumping memory from the application to check for insecurely stored secrets
- Checking local storage for files created at runtime
- Breaking SSL Pinning at Runtime

# Dynamic Analysis can often result in attacks related to the OWASP top Ten
- SQL injection, Cross-site Scripting, IDOR, XXE, etc.
- Note on XSS: you often will not get XSS in the mobile app itself, but sometimes this can affect the full version of the website.

# Reporting 

- Often contains executive summary as well as specific vulnerabilities discovered
- Write report with both OWASP Top Ten (Web) and OWASP Top Ten (Mobile) in mind
- Provide business with the criticality as well as steps to reproduce
- Remember to mention the positive security implementations

# Android Architecture

Android is based on the Linux Operating System, any linux commands will work here. Also the permission model.

# Dalvik vs the Android Runtime

- Every application is run in a virtual machine know as the Android Runtime
- Dalvik was the original runtime VM, and is still referenced to by the name Dalvik bytecode.
-- Dalvik is not  utilized in modern Android OS, and has been replaced by the ART (Android Runtime)





